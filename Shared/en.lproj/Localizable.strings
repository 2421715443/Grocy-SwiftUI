/* 
  Localizable.strings
  Grocy-SwiftUI

  Created by Georg Meissner on 13.11.20.
  
*/

// MARK: - Generic
"str.cancel" = "Cancel";
"str.ok" = "OK";
"str.delete" = "Delete";
"str.edit" = "Edit";
"str.save" = "Save";
"str.search" = "Search";
"str.noSearchResult" = "No searchresult found.";
"str.day" = "Day";
"str.days" = "Days";
"str.refresh" = "Refresh";
"str.close" = "Close";
"str.add" = "Add";

// MARK: - Transactions
"tr.purchase" = "Purchase";
"tr.consume" = "Consume";
"tr.opened" = "Opened";
"tr.inventory" = "Inventory";

// MARK: - Navigation
"str.nav.stockOverview" = "Stock overview";
"str.nav.shoppingList" = "Shopping list";
"str.nav.recipes" = "Recipes";
"str.nav.mealPlan" = "Meal plan";
"str.nav.choresOverview" = "Chores overview";
"str.nav.tasks" = "Tasks";
"str.nav.batteriesOverview" = "Batteries overview";
"str.nav.equipment" = "Equipment";
"str.nav.calendar" = "Calendar";
"str.nav.purchase" = "Purchase";
"str.nav.consume" = "Consume";
"str.nav.transfer" = "Transfer";
"str.nav.inventory" = "Inventory";
"str.nav.choreTracking" = "Chore tracking";
"str.nav.batteryTracking" = "Battery tracking";
"str.nav.md" = "Master data";
"str.nav.md.products" = "Products";
"str.nav.md.locations" = "Locations";
"str.nav.md.shoppingLocations" = "Shopping locations";
"str.nav.md.quantityUnits" = "Quantity units";
"str.nav.md.productGroups" = "Product groups";
"str.nav.md.chores" = "Chores";
"str.nav.md.batteries" = "Batteries";
"str.nav.md.taskCategories" = "Task categories";
"str.nav.md.userFields" = "User fields";
"str.nav.md.userEntities" = "User entities";
"str.nav.settings" = "Settings";

// MARK: - Details
"str.details.title" = "Product overview";
"str.details.amount" = "Stock amount";
"str.details.stockValue" = "Stock value";
"str.details.defaultLocation" = "Default location";
"str.details.lastPurchaseDate" = "Last purchased";
"str.details.lastUseDate" = "Last used";
"str.details.lastPrice" = "Last price";
"str.details.averagePrice" = "Average price";
"str.details.averageShelfLife" = "Average shelf life";
"str.details.spoilRate" = "Spoil rate";

"str.details.stockEntries" = "Stock entries";
"str.details.stockJournal" = "Stock journal";
"str.details.edit" = "Edit product";

// MARK: - Stock
"str.stock.stockOverview" = "Stock overview";
// Products, Summed Value
"str.stock.stockOverviewInfo %lld %@" = "%lld Products, %@ total value";
"str.stock.search" = "Search stock";
"str.stock.empty" = "Nothing on stock.";
"str.stock.location" = "Location";
"str.stock.productGroup" = "Product group";
"str.stock.status" = "Status";
"str.stock.all" = "All";
"str.stock.productAmount1" = "1 product is";
"str.stock.productAmount" = "products are";
"str.stock.expiringSoon" = "expiring soon";
"str.stock.overdue" = "overdue";
"str.stock.expired" = "already expired";
"str.stock.belowMinStock" = "below min. stock amount";

"str.stock.entry.description %@ %@ %@ %@" = "Amount: %@; Due on %@; Bought on %@; %@";
"str.stock.entry.status.notOpened" = "Not opened";
"str.stock.entry.status.opened" = "Opened";

"str.stock.tbl.product" = "Product";
"str.stock.tbl.productGroup" = "Product group";
"str.stock.tbl.amount" = "Amount";
"str.stock.tbl.value" = "Value";
"str.stock.tbl.nextBestBefore" = "Next best before date";
"str.stock.tbl.caloriesPerStockQU" = "Calories (Per stock quantity unit)";
"str.stock.tbl.calories" = "Calories";
"str.stock.tbl.action.all" = "All";
"str.stock.tbl.action.consume %@" = "Consume %@";
"str.stock.tbl.action.consume.all %@" = "Consume all %@ which are currently in stock";
"str.stock.tbl.action.consume.open %@" = "Mark %@ as open";

"str.stock.tbl.menu.addToShL" = "Add to shopping list";
"str.stock.tbl.menu.consumeAsSpoiled %@" = "Consume %@ as spoiled";
"str.stock.tbl.menu.searchRecipes" = "Search for recipes which contain this product";

"str.stock.buy" = "Purchase";
"str.stock.buy.product" = "Product";
"str.stock.buy.product.buy" = "Purchase product";
"str.stock.buy.product.required" = "You have to select a product";
"str.stock.buy.product.amount" = "Amount";
"str.stock.buy.product.amount.invalid" = "This cannot be lower than 0.0001 and needs to be a valid number with max. 4 decimal places";
"str.stock.buy.product.quantityUnit" = "Quantity unit";
"str.stock.buy.product.quantityUnit.required" = "A quantity unit is required";
"str.stock.buy.product.dueDate" = "Due date";
"str.stock.buy.product.dueDate.required" = "A due date is required";
"str.stock.buy.product.doesntSpoil" = "Never overdue";
"str.stock.buy.product.price" = "Price";
"str.stock.buy.product.price.invalid" = "This cannot be lower than 0.01 and needs to be a valid number with max. 2 decimal places";
"str.stock.buy.product.price.unitPrice" = "Unit price";
"str.stock.buy.product.price.totalPrice" = "Total price";
"str.stock.buy.product.shoppingLocation" = "Store";
"str.stock.buy.product.location" = "Location";

"str.stock.consume" = "Consume";
"str.stock.consume.product" = "Product";
"str.stock.consume.product.consume" = "Consume product";
"str.stock.consume.product.open" = "Mark as opened";
"str.stock.consume.product.required" = "You have to select a product";
"str.stock.consume.product.amount" = "Amount";
"str.stock.consume.product.amount.invalid" = "This cannot be lower than 0.0001 and needs to be a valid number with max. 4 decimal places";
"str.stock.consume.product.quantityUnit" = "Quantity unit";
"str.stock.consume.product.quantityUnit.required" = "A quantity unit is required";
"str.stock.consume.product.location" = "Location";
"str.stock.consume.product.location.required" = "A location is required";
"str.stock.consume.product.details" = "Details";
"str.stock.consume.product.spoiled" = "Spoiled";
"str.stock.consume.product.useStockEntry" = "Use a specific stock item";
"str.stock.consume.product.useStockEntry.description" = "The first item in this list would be picked by the default rule which is \"Opened first, then first due first, then first in first out\"";
"str.stock.consume.product.stockEntry" = "Stock entry";
"str.stock.consume.product.recipe" = "Recipe";
"str.stock.consume.product.recipe.info" = "This is for statistical purposes only";

"str.stock.transfer" = "Transfer";
"str.stock.transfer.product" = "Product";
"str.stock.transfer.product.transfer" = "Transfer product";
"str.stock.transfer.product.required" = "You have to select a product";
"str.stock.transfer.product.locationFrom" = "From location";
"str.stock.transfer.product.locationFrom.required" = "A location is required";
"str.stock.transfer.product.amount" = "Amount";
"str.stock.transfer.product.amount.required" = "This cannot be lower than 0.0001 and needs to be a valid number with max. 4 decimal places";
"str.stock.transfer.product.quantityUnit" = "Quantity unit";
"str.stock.transfer.product.quantityUnit.required" = "A quantity unit is required";
"str.stock.transfer.product.locationTo" = "To location";
"str.stock.transfer.product.locationTO.required" = "A location is required";
"str.stock.transfer.product.locationTO.same" = "This cannot be the same as the \"From\" location";
"str.stock.transfer.product.useStockEntry" = "Use a specific stock item";
"str.stock.transfer.product.useStockEntry.description" = "The first item in this list would be picked by the default rule which is \"Opened first, then first due first, then first in first out\"";

"str.stock.inventory" = "Inventory";
"str.stock.inventory.product" = "Product";
"str.stock.inventory.product.inventory" = "Perform inventory";
"str.stock.inventory.product.amount" = "New stock amount ";
"str.stock.inventory.product.amount.invalid" = "This cannot be lower than 0.0001 and needs to be a valid number with max. 4 decimal places";
"str.stock.inventory.product.amount.lower %@" = "This means %@ will be removed from stock";
"str.stock.inventory.product.amount.higher %@" = "This means %@ will be added to stock";
"str.stock.inventory.product.quantityUnit" = "Quantity unit";
"str.stock.inventory.product.quantityUnit.required" = "A quantity unit is required";
"str.stock.inventory.product.dueDate" = "Due date";
"str.stock.inventory.product.dueDate.info" = "This will apply to added products";
"str.stock.inventory.product.dueDate.required" = "A due date is required";
"str.stock.inventory.product.neverOverdue" = "Never overdue";
"str.stock.inventory.product.price" = "Price";
"str.stock.inventory.product.price.info" = "Per stock quantity unit";
"str.stock.inventory.product.price.invalid" = "This cannot be lower than 0.01 and needs to be a valid number with max. 2 decimal places";
"str.stock.inventory.product.shoppingLocation" = "Store";
"str.stock.inventory.product.location" = "Location";
"str.stock.inventory.product.location.info" = "This will apply to added products";
"str.stock.inventory.product.location.required" = "A location is required";

"str.stock.journal" = "Stock journal";
"str.stock.journal.empty" = "No transactions found.";
"str.stock.journal.product" = "Product";
"str.stock.journal.amount" = "Amount";
"str.stock.journal.transactionTime" = "Transaction time";
"str.stock.journal.transactionType" = "Transaction type";
"str.stock.journal.location" = "Location";
"str.stock.journal.user" = "Done by";

// MARK: - Master Data
"str.md.masterData" = "Master Data";
"str.md.description" = "Description";

"str.md.search" = "Search";
"str.md.searchFailed %@" = "No %@ found.";
"str.md.delete %@" = "Delete %@";
"str.md.edit %@" = "Edit %@";
"str.md.new %@" = "New %@";
"str.md.save %@" = "Save %@";
"str.md.empty %@" = "No %@ found. Add some.";

"str.md.products" = "Products";
"str.md.product" = "Product";
"str.md.product.rowLocation %@" = "Location: %@";
"str.md.product.rowProductGroup %@" = "Product group: %@";
"str.md.product.new" = "Create product";
"str.md.product.edit" = "Edit product";
"str.md.product.info" = "Product info";
"str.md.product.name" = "Product name";
"str.md.product.name.required" = "A name is required";
"str.md.product.name.exists" = "Name already exists";
"str.md.product.active" = "Active";
"str.md.product.parentProduct" = "Parent product ";
"str.md.product.description" = "Description";
"str.md.product.location" = "Default location";
"str.md.product.location.required" = "A location is required";
"str.md.product.shoppingLocation" = "Default store";
"str.md.product.minStockAmount" = "Minimum stock amount ";
"str.md.product.minStockAmount.invalid" = "This cannot be lower than 0 and needs to be a valid number with max. 4 decimal places";
"str.md.product.cumulateMinStockAmountOfSubProducts" = "Accumulate sub products min. stock amount ";
"str.md.product.cumulateMinStockAmountOfSubProducts.info" = "If enabled, the min. stock amount of sub products will be accumulated into this product, means the sub product will never be \"missing\", only this product";
"str.md.product.dueType" = "Due date type";
"str.md.product.dueType.info" = "Based on the selected type, the highlighting on the stock overview page will be different";
"str.md.product.dueType.bestBefore" = "Best before date";
"str.md.product.dueType.bestBefore.info" = "Means that the product is maybe still safe to be consumed after its due date is reached";
"str.md.product.dueType.expires" = "Expiration date";
"str.md.product.dueType.expires.info" = "Means that the product is not safe to be consumed after its due date is reached";
"str.md.product.defaultDueDays" = "Default due days";
"str.md.product.defaultDueDays.info" = "For purchases this amount of days will be added to today for the due date suggestion (-1 means that this product will be never overdue)";
"str.md.product.defaultDueDaysAfterOpen" = "Default due days after opened";
"str.md.product.defaultDueDaysAfterOpen.info" = "When this product was marked as opened, the due date will be replaced by today + this amount of days (a value of 0 disables this)";
"str.md.product.productGroup" = "Product group";
"str.md.product.quStock" = "Quantity unit stock";
"str.md.product.quStock.info" = "Quantity unit stock cannot be changed after first purchase";
"str.md.product.quStock.required" = "A quantity unit is required";
"str.md.product.quPurchase" = "Default quantity unit purchase ";
"str.md.product.quPurchase.info" = "This is the default quantity unit used when adding this product to the shopping list";
"str.md.product.quPurchase.required" = "A quantity unit is required";
"str.md.product.quFactorPurchaseToStock" = "Factor purchase to stock quantity unit ";
"str.md.product.quFactorPurchaseToStock.invalid" = "This cannot be lower than 0.0001 and needs to be a valid number with max. 4 decimal places";
"str.md.product.enableTareWeightHandling" = "Enable tare weight handling";
"str.md.product.enableTareWeightHandling.info" = "This is useful e.g. for flour in jars - on purchase/consume/inventory you always weigh the whole jar, the amount to be posted is then automatically calculated based on what is in stock and the tare weight defined below";
"str.md.product.tareWeight" = "Tare weight";
"str.md.product.tareWeight.invalid" = "This cannot be lower than 0.0001 and needs to be a valid number with max. 4 decimal places";
"str.md.product.notCheckStockFulfillmentForRecipes" = "Disable stock fulfillment checking for this ingredient";
"str.md.product.notCheckStockFulfillmentForRecipes.info" = "This will be used as the default setting when adding this product as a recipe ingredient";
"str.md.product.calories" = "Energy (kcal)";
"str.md.product.calories.info" = "Per stock quantity unit";
"str.md.product.defaultDueDaysAfterFreezing" = "Default due days after freezing";
"str.md.product.defaultDueDaysAfterFreezing.info" = "On moving this product to a freezer location (so when freezing it), the due date will be replaced by today + this amount of days";
"str.md.product.defaultDueDaysAfterThawing" = "Default due days after thawing";
"str.md.product.defaultDueDaysAfterThawing.info" = "On moving this product from a freezer location (so when thawing it), the due date will be replaced by today + this amount of days";
"str.md.product.quickConsumeAmount" = "Quick consume amount";
"str.md.product.quickConsumeAmount.info" = "This amount is used for the \"quick consume/open buttons\" on the stock overview page (related to quantity unit stock)";
"str.md.product.quickConsumeAmount.invalid" = "This cannot be lower than 0.0001 and needs to be a valid number with max. 4 decimal places";
"str.md.product.dontShowOnStockOverview" = "Never show on stock overview ";
"str.md.product.dontShowOnStockOverview.info" = "The stock overview page lists all products which are currently in-stock or below their min. stock amount - enable this to hide this product there always";
"str.md.product.delete.confirm" = "Do you really want to delete this product?";

"str.md.locations" = "Locations";
"str.md.location" = "Location";
"str.md.location.new" = "New location";
"str.md.location.edit" = "Edit location";
"str.md.location.info" = "Location info";
"str.md.location.name" = "Location";
"str.md.location.name.required" = "A name is required";
"str.md.location.name.exists" = "Name already exists";
"str.md.location.freezer" = "Freezer";
"str.md.location.isFreezing" = "Is freezer";
"str.md.location.isFreezing.description" = "When moving product from/to a freezer location, the products due date is automatically adjusted according to the product settings";
"str.md.location.delete.confirm" = "Do you really want to delete this location?";

"str.md.shoppingLocations" = "Shopping locations";
"str.md.shoppingLocation" = "Shopping location";
"str.md.shoppingLocation.new" = "New shopping location";
"str.md.shoppingLocation.edit" = "Edit shopping location";
"str.md.shoppingLocation.info" = "Shopping location info";
"str.md.shoppingLocation.name" = "Shopping location";
"str.md.shoppingLocation.name.required" = "A name is required";
"str.md.shoppingLocation.name.exists" = "Name already exists";
"str.md.shoppingLocation.delete.confirm" = "Do you really want to delete this shopping location?";

"str.md.quantityUnits" = "Quantity units";
"str.md.quantityUnit" = "Quantity unit";
"str.md.quantityUnit.new" = "New quantity unit";
"str.md.quantityUnit.edit" = "Edit quantity unit";
"str.md.quantityUnit.info" = "Quantity unit info";
"str.md.quantityUnit.name" = "Name (in singular form)";
"str.md.quantityUnit.name.required" = "A name is required";
"str.md.quantityUnit.name.exists" = "Name already exists";
"str.md.quantityUnit.namePlural" = "Name (in plural form)";
"str.md.quantityUnit.delete.confirm" = "Do you really want to delete this quantity unit?";

"str.md.productGroups" = "Product groups";
"str.md.productGroup" = "Product group";
"str.md.productGroup.new" = "Create product group";
"str.md.productGroup.edit" = "Edit product group";
"str.md.productGroup.info" = "Product group info";
"str.md.productGroup.name" = "Product group name";
"str.md.productGroup.name.required" = "A name is required";
"str.md.productGroup.name.exists" = "Name already exists";

"str.md.chores" = "Hausarbeiten";
"str.md.batteries" = "Batterien";
"str.md.taskCategories" = "Aufgabenkategorien";

"str.md.userFields" = "Userfields";
"str.md.userField" = "Userfield";
"str.md.userFields.rowName %@" = "Name: %@";
"str.md.userFields.rowEntity %@" = "Entity: %@";
"str.md.userFields.rowType %@" = "Type: %@";
"str.md.userField.new" = "Create userfield";
"str.md.userField.edit" = "Edit userfield";
"str.md.userField.entity" = "Entity";
"str.md.userField.entity.required" = "An entity is required";
"str.md.userField.name" = "Name";
"str.md.userField.name.info" = "This is the internal field name, e. g. for the API";
"str.md.userField.name.required" = "This is required and can only contain letters and numbers";
"str.md.userField.name.invalid" = "This is required and can only contain letters and numbers";
"str.md.userField.caption" = "Caption";
"str.md.userField.caption.info" = "This is used to display the field on the frontend";
"str.md.userField.caption.required" = "A caption is required";
"str.md.userField.sortNumber" = "Sort number";
"str.md.userField.sortNumber.info" = "Multiple Userfields will be ordered by that number on the input form";
"str.md.userField.sortNumber.invalid" = "This cannot be lower than 0 and needs to be a valid number with max. 0 decimal places";
"str.md.userField.type" = "Type";
"str.md.userField.type.required" = "A type is required";
"str.md.userField.showAsColumnInTables" = "Show as column in tables";
"str.md.userField.delete.confirm" = "Do you really want to delete this userfield?";

"str.md.userField.type.textSingleLine" = "Text (single line)";
"str.md.userField.type.textMultiLine" = "Text (multi line)";
"str.md.userField.type.numberIntegral" = "Number (integral)";
"str.md.userField.type.numberDezimal" = "Number (decimal)";
"str.md.userField.type.date" = "Date (without time)";
"str.md.userField.type.dateTime" = "Date & time";
"str.md.userField.type.checkbox" = "Checkbox";
"str.md.userField.type.presetList" = "Select list (a single item can be selected)";
"str.md.userField.type.presetChecklist" = "Select list (multiple items can be selected)";
"str.md.userField.type.link" = "Link";
"str.md.userField.type.file" = "File";
"str.md.userField.type.image" = "Image";

// MARK: - Settings
"str.settings" = "Settings";
"str.settings.logout" = "Logout from server";
"str.settings.info" = "Information about Grocy-Server";
"str.settings.info.version %@" = "Grocy Version %@";
"str.settings.info.grocyVersion %@" = "Version: %@";
"str.settings.info.grocyRLSDate %@" = "Release Date: %@";
"str.settings.info.grocyPHPVersion %@" = "PHP Version: %@";
"str.settings.info.grocySQLiteVersion %@" = "SQLite Version: %@";
"str.settings.about" = "About this app";
"str.settings.about.thanks" = "I want to thank Bernd Bestel for the development of Grocy. Without him, this app would be impossible.";
"str.settings.about.version" = "Version";
"str.settings.about.developer" = "Developer";
